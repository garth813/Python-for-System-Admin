#!/usr/bin/python3.7
import argparse,sys,subprocess

desc = "Find a process which is running" \
	"on a given port which is passed as an argument by the user. "
parser = argparse.ArgumentParser(description=(desc))

#this argument is required and must be an integer
parser.add_argument("--port","-p",help="The port number that "
	"your process is running on.",type=int,required=True)

args = parser.parse_args()
port = str(args.port)
command = '-i4TCP:'
full_command = (str)(command + port)

output = subprocess.run(['lsof','-n',"%s"% full_command],
	stdout=subprocess.PIPE, stderr=subprocess.PIPE)

if output.returncode != 0:
	print(f"No process at port {port} found. \nEnsure that you have the correct port number and " \
		"that it is still active.")
	exit((2))


#So far this is a bytes object so I need to format it into a string
text = str(output.stdout.decode())
print(text)
ls = text.split()
#9 is program, 10 pid, 11 user, port number is still stored in port variable
program = ls[9]
answer = input(f"Are your sure you want to kill {ls[9]} started by {ls[11]} "
	f"on port {port}? y/n ")

if answer == 'y':
	#output2 = subprocess.run(['killall','-s','SIGTERM',"%s" % program])
	output2 = subprocess.run(['kill','-s','SIGTERM',ls[10]])
	if output2.returncode != 0:
		print(f"An error occured while trying to kill the program {ls[9]}, process #{ls[10]}")
		print(f"Ensure that the process is still running or try 'kill -s SIGTERM {ls[10]} to " \
			"end the program manually.")
		exit(2)
	else:
		print(f"Process ID {ls[10]} ended sucessfully.")
